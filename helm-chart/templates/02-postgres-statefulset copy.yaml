{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-backstage
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "backstage.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  selector:
    matchLabels:
      {{- include "backstage.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  serviceName: "postgres"
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "backstage.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
        app: postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          ports:
            - containerPort: {{ .Values.postgresql.service.port }}
              name: postgres
          envFrom:
            - secretRef:
                name: postgres-backstage-secret
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_INITDB_ARGS 
              value: "--auth-host=scram-sha-256"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.postgresql.storage.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.postgresql.storage.size }}
{{- end }}