apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backstage.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "backstage.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backstage.replicas }}
  selector:
    matchLabels:
      {{- include "backstage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "backstage.selectorLabels" . | nindent 8 }}
        app: backstage
    spec:
      {{- if .Values.postgresql.enabled }}
      initContainers:
        - name: wait-for-postgres
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          command: ['sh', '-c']
          args:
            - |
              until pg_isready -h postgres -p {{ .Values.postgresql.service.port }} -U {{ .Values.postgresql.auth.username }}; do
                echo "Waiting for postgres..."
                sleep 2
              done
      {{- end }}
      containers:
        - name: backstage
          image: "{{ .Values.backstage.image.repository }}:{{ .Values.backstage.image.tag }}"
          imagePullPolicy: {{ .Values.backstage.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backstage.service.targetPort }}
          envFrom:
            - secretRef:
                name: backstage-secrets
          {{- with .Values.backstage.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.backstage.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backstage.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backstage.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}